---
import { lightTheme, darkTheme } from '../styles/theme.js'
import gradients from '../styles/Gradient'

const modes = [
  { label: 'LIGHT', theme: lightTheme },
  { label: 'DARK', theme: darkTheme },
]

const build = (t) => {
  const g = gradients({ colors: t.colors })
  const colorGroups = Object.keys(t.colors).filter(
    (k) => typeof t.colors[k] === 'object'
  )
  const gradientKeys = Object.keys(g)
  return { t, g, colorGroups, gradientKeys }
}

const showcase = modes.map(({ label, theme }) => ({ label, ...build(theme) }))

const tonePairs = (obj) =>
  Object.entries(obj)
    .filter(([, v]) => typeof v === 'string')
    .map(([k, v]) => ({ key: k, val: v }))
---

<html lang="de">
  <head>
    <meta charset="utf-8" />
    <title>kyon — theme showcase</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" href="/favicon.svg" />
    <style>
      :root {
        --gap: 12px;
        --wrap: 1200px;
        --radius: 10px;
      }
      * {
        box-sizing: border-box;
      }
      html,
      body {
        margin: 0;
        padding: 0;
        font-family: Geist, Inter, system-ui, Arial, sans-serif;
      }
      .wrap {
        max-width: var(--wrap);
        margin: 0 auto;
        padding: 32px 20px;
        display: grid;
        gap: 28px;
      }
      .panel {
        border-radius: var(--radius);
        overflow: hidden;
        border: 1px solid rgba(0, 0, 0, 0.08);
      }
      .head {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 16px 18px;
        font-weight: 600;
        letter-spacing: 0.02em;
      }
      .grid {
        display: grid;
        gap: var(--gap);
      }
      .grid.cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr));
      }
      .grid.cols-4 {
        grid-template-columns: repeat(4, minmax(0, 1fr));
      }
      .grid.auto {
        grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
      }
      .swatch {
        border-radius: 12px;
        overflow: hidden;
        border: 1px solid rgba(0, 0, 0, 0.08);
      }
      .swatch .color {
        height: 80px;
      }
      .swatch .meta {
        padding: 10px 12px;
        font-size: 13px;
        display: flex;
        justify-content: space-between;
        opacity: 0.9;
      }
      .gradient {
        height: 80px;
        border-radius: 12px;
        border: 1px solid rgba(0, 0, 0, 0.08);
      }
      .typo {
        display: grid;
        gap: 10px;
        padding: 10px 14px;
      }
      .card {
        padding: 18px;
        border-radius: 12px;
      }
      .row {
        display: flex;
        gap: var(--gap);
        align-items: stretch;
      }
      .badge {
        padding: 4px 10px;
        border-radius: 999px;
        font-size: 12px;
        font-weight: 600;
        letter-spacing: 0.04em;
        border: 1px solid rgba(0, 0, 0, 0.12);
      }
      @media (max-width: 820px) {
        .grid.cols-4 {
          grid-template-columns: repeat(2, minmax(0, 1fr));
        }
        .grid.cols-3 {
          grid-template-columns: repeat(2, minmax(0, 1fr));
        }
      }
    </style>
  </head>
  <body>
    <main class="wrap">
      {
        showcase.map(({ label, t, g, colorGroups, gradientKeys }) => (
          <section
            class="panel"
            style={`background:${t.colors.neutral.background}; color:${t.colors.text.main}; border-color:${t.colors.neutral.border}`}
          >
            <div
              class="head"
              style={`background:${t.colors.surface?.hover || t.colors.neutral.surface}; color:${t.colors.text.main}; border-bottom:1px solid ${t.colors.neutral.border}`}
            >
              <div>THEME · {label}</div>
              <div class="row">
                <span
                  class="badge"
                  style={`background:${t.colors.primary.surface}; color:${t.colors.primary.contrast}; border-color:${t.colors.primary.border}`}
                >
                  primary
                </span>
                <span
                  class="badge"
                  style={`background:${t.colors.accent.surface}; color:${t.colors.accent.contrast}; border-color:${t.colors.accent.border}`}
                >
                  accent
                </span>
                <span
                  class="badge"
                  style={`background:${t.colors.highlight.surface}; color:${t.colors.text.main}; border-color:${t.colors.highlight.border}`}
                >
                  highlight
                </span>
              </div>
            </div>

            <div style="display:grid; gap:18px; padding:12px 14px 20px;">
              <div class="grid cols-3">
                <div class="grid auto">
                  {colorGroups.map((group) => (
                    <div
                      class="swatch"
                      style={`background:${t.colors.neutral.surface}; border-color:${t.colors.neutral.border}`}
                    >
                      <div
                        class="head"
                        style={`background:${t.colors.surface?.hover || t.colors.neutral.surface}; color:${t.colors.text.main}; border-bottom:1px solid ${t.colors.neutral.border}`}
                      >
                        {group}
                      </div>
                      <div style="display:grid; gap:18px; padding:12px 14px 20px;">
                        <div class="grid cols-4">
                          {tonePairs(t.colors[group]).map(({ key, val }) => (
                            <div
                              class="swatch"
                              style={`border-color:${t.colors.neutral.border}`}
                            >
                              <div class="color" style={`background:${val}`} />
                              <div class="meta">
                                <span>{key}</span>
                                <span style="font-family:ui-monospace,Menlo,Consolas,monospace; font-size:12px; opacity:.8">
                                  {val}
                                </span>
                              </div>
                            </div>
                          ))}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>

                <div class="grid">
                  <div
                    class="swatch"
                    style={`border-color:${t.colors.neutral.border}`}
                  >
                    <div
                      class="head"
                      style={`background:${t.colors.surface?.hover || t.colors.neutral.surface}; color:${t.colors.text.main}; border-bottom:1px solid ${t.colors.neutral.border}`}
                    >
                      gradients
                    </div>
                    <div
                      style="display:grid; gap:18px; padding:12px 14px 20px;"
                      class="grid auto"
                    >
                      {gradientKeys.map((k) => (
                        <div>
                          <div class="gradient" style={`background:${g[k]}`} />
                          <div class="swatch meta">
                            <span>{k}</span>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>

                  <div
                    class="swatch"
                    style={`border-color:${t.colors.neutral.border}`}
                  >
                    <div
                      class="head"
                      style={`background:${t.colors.surface?.hover || t.colors.neutral.surface}; color:${t.colors.text.main}; border-bottom:1px solid ${t.colors.neutral.border}`}
                    >
                      glow & shadow
                    </div>
                    <div style="display:grid; gap:18px; padding:12px 14px 20px;">
                      <div class="grid cols-3">
                        <div
                          class="card"
                          style={`background:${t.colors.surface?.card || t.colors.neutral.surface}; box-shadow:${t.boxShadow?.md}; color:${t.colors.text.main}`}
                        >
                          md
                        </div>
                        <div
                          class="card"
                          style={`background:${t.colors.surface?.card || t.colors.neutral.surface}; box-shadow:${t.boxShadow?.lg}; color:${t.colors.text.main}`}
                        >
                          lg
                        </div>
                        <div
                          class="card"
                          style={`background:${t.colors.surface?.card || t.colors.neutral.surface}; box-shadow:${t.boxShadow?.glow}; color:${t.colors.text.main}`}
                        >
                          glow
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                <div
                  class="swatch"
                  style={`border-color:${t.colors.neutral.border}`}
                >
                  <div
                    class="head"
                    style={`background:${t.colors.surface?.hover || t.colors.neutral.surface}; color:${t.colors.text.main}; border-bottom:1px solid ${t.colors.neutral.border}`}
                  >
                    typography
                  </div>
                  <div class="typo" style={`color:${t.colors.text.main}`}>
                    <div
                      style={`font-size:${t.typography.fontSize.h1}; font-weight:${t.typography.fontWeight.bold}; line-height:${t.typography.lineHeight.tight}; letter-spacing:${t.typography.letterSpacing.tight}`}
                    >
                      H1 — Kyon
                    </div>
                    <div
                      style={`font-size:${t.typography.fontSize.h2}; font-weight:${t.typography.fontWeight.bold}; line-height:${t.typography.lineHeight.tight}; letter-spacing:${t.typography.letterSpacing.tight}`}
                    >
                      H2 — Atelier & Weggefährte
                    </div>
                    <div
                      style={`font-size:${t.typography.fontSize.h3}; font-weight:${t.typography.fontWeight.medium}; line-height:${t.typography.lineHeight.normal}`}
                    >
                      H3 — Schönheit = Effizienz
                    </div>
                    <div
                      style={`font-size:${t.typography.fontSize.body}; line-height:${t.typography.lineHeight.normal}; opacity:.95`}
                    >
                      Body — Markdown für den Fluss, Komponenten für den Glanz.
                      Performance vor Deko.
                    </div>
                    <div
                      style={`font-size:${t.typography.fontSize.small}; line-height:${t.typography.lineHeight.tight}; color:${t.colors.text.subtle}`}
                    >
                      Caption — ruhig, präzise, lesbar
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>
        ))
      }
    </main>
  </body>
</html>
